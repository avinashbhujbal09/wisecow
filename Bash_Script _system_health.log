#!/bin/bash

# Thresholds
CPU_THRESHOLD=80
MEMORY_THRESHOLD=80
DISK_THRESHOLD=80

# Log file
LOG_FILE="system_health.log"

# Function to check CPU usage
check_cpu() {
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')
    cpu_usage=${cpu_usage%.*} # Remove decimals
    if [ "$cpu_usage" -gt "$CPU_THRESHOLD" ]; then
        echo "$(date): ALERT! High CPU usage: ${cpu_usage}%" | tee -a $LOG_FILE
    else
        echo "$(date): CPU usage is normal: ${cpu_usage}%" | tee -a $LOG_FILE
    fi
}

# Function to check memory usage
check_memory() {
    local memory_usage=$(free | grep Mem | awk '{print $3/$2 * 100.0}')
    memory_usage=${memory_usage%.*} # Remove decimals
    if [ "$memory_usage" -gt "$MEMORY_THRESHOLD" ]; then
        echo "$(date): ALERT! High memory usage: ${memory_usage}%" | tee -a $LOG_FILE
    else
        echo "$(date): Memory usage is normal: ${memory_usage}%" | tee -a $LOG_FILE
    fi
}

# Function to check disk usage
check_disk() {
    local disk_usage=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
    if [ "$disk_usage" -gt "$DISK_THRESHOLD" ]; then
        echo "$(date): ALERT! High disk usage: ${disk_usage}%" | tee -a $LOG_FILE
    else
        echo "$(date): Disk usage is normal: ${disk_usage}%" | tee -a $LOG_FILE
    fi
}

# Function to check running processes
check_processes() {
    local process_count=$(ps aux | wc -l)
    echo "$(date): Total running processes: ${process_count}" | tee -a $LOG_FILE
}

# Main monitoring function
monitor_system() {
    echo "Starting system health check..."
    check_cpu
    check_memory
    check_disk
    check_processes
    echo "System health check completed. Results logged to $LOG_FILE"
}

# Run the monitoring function in a loop
while true; do
    monitor_system
    sleep 10  # Run every 10 seconds
done
